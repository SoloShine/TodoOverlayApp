<UserControl
    x:Class="TodoOverlayApp.Views.TodoItemControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:TodoOverlayApp.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:TodoOverlayApp.Models"
    xmlns:vm="clr-namespace:TodoOverlayApp.ViewModels"
    d:DataContext="{d:DesignInstance Type=vm:MainWindowViewModel}"
    d:DesignHeight="50"
    d:DesignWidth="400"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converters:AppPathToIconConverter x:Key="AppPathToIconConverter" />

        <!--  为Button定义默认样式，避免重复设置  -->
        <Style
            x:Key="DefaultButtonStyle"
            BasedOn="{StaticResource ButtonIcon}"
            TargetType="Button">
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="hc:BorderElement.CornerRadius" Value="10" />
        </Style>

        <!--  添加一个布尔值到可见性的转换器  -->
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
    </UserControl.Resources>

    <Grid x:Name="RootGrid" HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <!--  复选框  -->
            <ColumnDefinition Width="Auto" />
            <!--  图标  -->
            <ColumnDefinition Width="*" />
            <!--  文本框  -->
            <ColumnDefinition Width="Auto" />
            <!--  按钮区域  -->
        </Grid.ColumnDefinitions>

        <!--  复选框  -->
        <CheckBox
            Grid.Column="0"
            VerticalAlignment="Center"
            BorderBrush="Black"
            BorderThickness="1"
            IsChecked="{Binding IsCompleted}" />

        <!--  显示应用程序图标  -->
        <Image
            Grid.Column="1"
            Width="16"
            Height="16"
            Margin="5,0"
            Source="{Binding AppPath, Converter={StaticResource AppPathToIconConverter}}"
            Visibility="{Binding AppPath, Converter={StaticResource String2VisibilityConverter}}" />

        <!--  文本框  -->
        <TextBox
            Grid.Column="2"
            Margin="5,0,0,0"
            BorderBrush="{DynamicResource PrimaryTextBrush}"
            BorderThickness="0,0,0,1"
            Text="{Binding Content}" />

        <!--  按钮区域  -->
        <StackPanel Grid.Column="3" Orientation="Horizontal">
            <!--  编辑按钮 - 始终可见  -->
            <Button
                hc:IconElement.Geometry="{StaticResource SearchGeometry}"
                Command="{Binding Source={StaticResource MainViewModel}, Path=EditTodoItemCommand}"
                CommandParameter="{Binding}"
                Style="{StaticResource DefaultButtonStyle}"
                ToolTip="编辑当前节点" />

            <!--  其他按钮 - 只在悬停时可见  -->
            <Button
                hc:IconElement.Geometry="{StaticResource AddGeometry}"
                Command="{Binding Source={StaticResource MainViewModel}, Path=AddSubTodoItemCommand}"
                CommandParameter="{Binding}"
                Style="{StaticResource DefaultButtonStyle}"
                ToolTip="添加子节点"
                Visibility="{Binding IsMouseOver, ElementName=RootGrid, Converter={StaticResource BoolToVisConverter}}" />

            <Button
                Margin="0,0,0,0"
                hc:IconElement.Geometry="{StaticResource EyeOpenGeometry}"
                Command="{Binding Source={StaticResource MainViewModel}, Path=ForceLaunchCommand}"
                CommandParameter="{Binding}"
                Tag="{Binding AppPath}"
                ToolTip="强制唤起该软件">
                <Button.Style>
                    <Style BasedOn="{StaticResource DefaultButtonStyle}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=RootGrid}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=RootGrid}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <ToggleButton
                BorderThickness="0"
                Command="{Binding Source={StaticResource MainViewModel}, Path=ToggleIsInjectedCommand}"
                CommandParameter="{Binding}"
                IsChecked="{Binding IsInjected}"
                Tag="{Binding AppPath}">
                <ToggleButton.Style>
                    <Style BasedOn="{StaticResource ToggleButtonFlip}" TargetType="ToggleButton">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=RootGrid}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=RootGrid}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
                <hc:StatusSwitchElement.CheckedElement>
                    <Border Background="{DynamicResource DangerBrush}">
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource TextIconBrush}"
                            Text="开"
                            ToolTip="点击关闭注入功能" />
                    </Border>
                </hc:StatusSwitchElement.CheckedElement>
                <Border Background="{DynamicResource PrimaryBrush}">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource TextIconBrush}"
                        Text="关"
                        ToolTip="点击打开注入功能" />
                </Border>
            </ToggleButton>

            <Button
                hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                Command="{Binding Source={StaticResource MainViewModel}, Path=DeleteTodoItemCommand}"
                CommandParameter="{Binding}"
                Style="{StaticResource DefaultButtonStyle}"
                ToolTip="删除当前节点及子节点"
                Visibility="{Binding IsMouseOver, ElementName=RootGrid, Converter={StaticResource BoolToVisConverter}}" />
        </StackPanel>
    </Grid>
</UserControl>
